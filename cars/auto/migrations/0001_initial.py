# Generated by Django 4.2.1 on 2025-02-11 06:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Auto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title auto')),
                ('slug', models.SlugField(max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(5, message='Min 5 symbols'), django.core.validators.MaxLengthValidator(30, message='Max 30 symbols')], verbose_name='Slug')),
                ('color', models.CharField(default='#000000', max_length=7, validators=[django.core.validators.RegexValidator(message='Введите цвет в формате HEX (например, #FFFFFF).', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')], verbose_name='Color')),
                ('weight', models.IntegerField(default=1000, verbose_name='Weight')),
                ('drive', models.CharField(choices=[(0, 'front wheel drive'), (1, 'rear wheel drive'), (2, 'four-wheel drive')], default=(0, 'front wheel drive'), max_length=100, verbose_name='drive')),
                ('trunk_capacity', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1000, message='Max 1000 kg'), django.core.validators.MinValueValidator(100, message='Min 100 kg')], verbose_name='Trunk_capacity')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='photos/%Y/%m/%d/', verbose_name='Auto image')),
                ('wheel_size', models.IntegerField(validators=[django.core.validators.MinValueValidator(10, message='Min 10R'), django.core.validators.MaxValueValidator(25, message='Max 25R')], verbose_name='Wheel size')),
                ('numbers_of_seats', models.IntegerField(validators=[django.core.validators.MinValueValidator(2, 'Min 2 seats'), django.core.validators.MaxValueValidator(9, 'Max 9 seats')], verbose_name='Numbers of seats')),
                ('safety_rating', models.IntegerField(choices=[(1, 'one'), (2, 'two'), (3, 'three'), (4, 'four'), (5, 'five'), (6, 'six'), (7, 'seven'), (8, 'eight'), (9, 'nine'), (10, 'ten')], default=(1, 'one'), verbose_name='Safety_rating')),
                ('fuel_tank_capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(5, message='Min 5 liters'), django.core.validators.MaxValueValidator(10000, message='Max 10000 liters')])),
                ('fuel_type', models.CharField(choices=[('1', 'gasoline'), ('2', 'diesel'), ('3', 'hydrogen'), ('4', 'electro')], default=('1', 'gasoline'), max_length=100)),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation time')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Update time')),
            ],
            options={
                'verbose_name': 'Auto',
                'verbose_name_plural': 'Autos',
                'ordering': ['-time_create'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Category title')),
                ('slug', models.SlugField(max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(5, message='Min 5 symbols'), django.core.validators.MaxLengthValidator(30, message='Max 30 symbols')], verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Engine name')),
                ('power', models.IntegerField(default=0, null=True)),
            ],
            options={
                'verbose_name': 'Engine',
                'verbose_name_plural': 'Engines',
            },
        ),
        migrations.CreateModel(
            name='Transmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Transmission title')),
                ('transmission_type', models.CharField(choices=[('0', 'automatic'), ('1', 'manual')], default=('0', 'automatic'), max_length=100, verbose_name='Transmission type')),
            ],
            options={
                'verbose_name': 'Transmission',
                'verbose_name_plural': 'Transmissions',
            },
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('auto_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auto.auto')),
                ('load_capacity', models.IntegerField(validators=[django.core.validators.MaxValueValidator(300000, message='Max 300000 kg')])),
            ],
            options={
                'verbose_name': ('Truck',),
                'verbose_name_plural': 'Trucks',
                'ordering': ['-time_create'],
            },
            bases=('auto.auto',),
        ),
        migrations.AddField(
            model_name='auto',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='autos', to='auto.category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='auto',
            name='engine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autos', to='auto.engine', verbose_name='Engine'),
        ),
        migrations.AddField(
            model_name='auto',
            name='transmission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autos', to='auto.transmission', verbose_name='Transmission'),
        ),
        migrations.AddIndex(
            model_name='auto',
            index=models.Index(fields=['-time_create'], name='time_create_indx'),
        ),
    ]
